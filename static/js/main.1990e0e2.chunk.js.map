{"version":3,"sources":["components/Button.jsx","components/TimeComponent.jsx","components/PresentTime.jsx","components/TimeTravelBox.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","React","Component","TimeComponent","this","props","id","value","PresentTime","day","month","hour","min","sec","legend","state","format","Date","locale","ptBR","TimeTravelBox","cronometerInterval","setInterval","setState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1990e0e2.chunk.js","sourcesContent":["import React from 'react';\n\nclass Button extends React.Component {\n  render() {\n    // const { id, value } = this.props;\n\n    return (\n      <button className=\"start\">1.21 GIGAWATTS</button>\n    )\n  }\n}\n\nexport default Button;","import React from 'react';\n\nclass TimeComponent extends React.Component {\n  render() {\n    const { id, value } = this.props;\n\n    return (\n      <div className={ id }>\n        <p>{ id }</p>\n        <div>{ value }</div>\n      </div>\n    )\n  }\n}\n\nexport default TimeComponent;","import React from 'react';\nimport Button from './Button';\nimport TimeComponent from './TimeComponent';\n\nclass PresentTime extends React.Component {\n  render() {\n    const { day, month, hour, min, sec, id } = this.props\n    \n    return (\n      <div className=\"timeframe\">\n        <div className=\"date\">\n          <TimeComponent id='day' value={ day }/>\n          <TimeComponent id='month' value={ month }/>\n          <TimeComponent id='hour' value={ hour }/>\n          <TimeComponent id='min' value={ min }/>\n          { id === \"destination-time\" ? <Button/> : <TimeComponent id='sec' value={ sec }/>}\n        </div>\n        <div className=\"legend\">\n          <p>{ this.props.legend }</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PresentTime;\n","import React from 'react';\n\nimport format from 'date-fns/format';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport PresentTime from './PresentTime';\n\nconst state = {\n  day: format(new Date(), 'dd', {locale: ptBR,}),\n  month: format(new Date(), 'MMM', {locale: ptBR,}),\n  hour: format(new Date(), 'HH', {locale: ptBR,}),\n  min: format(new Date(), 'mm', {locale: ptBR,}),\n  sec: format(new Date(), 'ss', {locale: ptBR,})\n}\n\nclass TimeTravelBox extends React.Component {\n  constructor() {\n    super();\n\n    this.state = state\n  }\n\n  componentDidMount() {\n    const ONE_MILISECOND = 1;\n    this.cronometerInterval = setInterval(() => {(\n      this).setState({\n        day: format(new Date(), 'dd', {locale: ptBR,}),\n        month: format(new Date(), 'MMM', {locale: ptBR,}),\n        hour: format(new Date(), 'HH', {locale: ptBR,}),\n        min: format(new Date(), 'mm', {locale: ptBR,}),\n        sec: format(new Date(), 'ss', {locale: ptBR,})\n      });\n    }, ONE_MILISECOND);\n  }\n  \n  render() {\n    const { day, month, hour, min, sec } = this.state\n\n    return (\n      <div className=\"box\">\n        <PresentTime \n          legend=\"Present Time\"\n          id=\"present-time\"\n          day={ day }\n          month={ month }\n          hour={ hour }\n          min={ min }\n          sec={ sec }\n        />\n        <PresentTime \n          legend=\"Destination Time\"\n          id=\"destination-time\"\n          day={ day }\n          month={ month }\n          hour={ hour }\n          min={ min }\n          sec={ sec }\n        />\n        <PresentTime \n          legend=\"Waiting Time\"\n          id=\"waiting-time\"\n          day={ day }\n          month={ month }\n          hour={ hour }\n          min={ min }\n          sec={ sec }\n        />\n      </div>\n    )\n  }\n}\n\nexport default TimeTravelBox;\n","\nimport React from 'react';\nimport './App.css';\nimport TimeTravelBox from './components/TimeTravelBox';\n\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"background\">\n        <TimeTravelBox />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}