{"version":3,"sources":["components/Button.jsx","components/InputComponent.jsx","components/TimeComponent.jsx","components/Timeframe.jsx","components/TimeTravelBox.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","React","Component","InputComponent","this","props","id","value","type","placeholder","TimeComponent","Timeframe","day","month","hour","min","sec","legend","state","date","Date","format","locale","ptBR","destHour","destMin","countdownHour","countdownMin","countdownSec","TimeTravelBox","time","bind","updateTime","setState","setInterval","countdown","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce9df066.chunk.js","sourcesContent":["import React from 'react';\n\nclass Button extends React.Component {\n  render() {\n    // const { id, value } = this.props;\n\n    return (\n      <button className=\"start\">\n        <p>1.21</p>\n        <p>GIGAWATTS</p> \n      </button>\n    )\n  }\n}\n\nexport default Button;","import React from 'react';\n\nclass InputComponent extends React.Component {\n  render() {\n    const { id, value } = this.props;\n\n    return (\n      <div className={ id }>\n        <p>{ id }</p>\n        <input type=\"text\" placeholder={ value }/>\n      </div>\n    )\n  }\n}\n\nexport default InputComponent;","import React from 'react';\n\nclass TimeComponent extends React.Component {\n  render() {\n    const { id, value } = this.props;\n\n    return (\n      <div className={ id }>\n        <p>{ id }</p>\n        <div>{ value }</div>\n      </div>\n    )\n  }\n}\n\nexport default TimeComponent;","import React from 'react';\nimport Button from './Button';\nimport InputComponent from './InputComponent';\nimport TimeComponent from './TimeComponent';\n\nclass Timeframe extends React.Component {\n  render() {\n    const { day, month, hour, min, sec, id } = this.props\n    \n    return (\n      <div className=\"timeframe\">\n        <div className=\"date\">\n          <TimeComponent id='day' value={ day }/>\n          <TimeComponent id='month' value={ month }/>\n          { id === \"destination-time\" ? <InputComponent id='hour' value={ hour }/> : <TimeComponent id='hour' value={ hour }/>}\n          { id === \"destination-time\" ? <InputComponent id='min' value={ min }/> : <TimeComponent id='min' value={ min }/>}\n          { id === \"destination-time\" ? <Button/> : <TimeComponent id='sec' value={ sec }/>}\n        </div>\n        <div className=\"legend\">\n          <p>{ this.props.legend }</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Timeframe;\n","import React from 'react';\n\nimport format from 'date-fns/format';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport Timeframe from './Timeframe';\n\nconst state = {\n  date: new Date(),\n  day: format(new Date(), 'dd', {locale: ptBR,}),\n  month: format(new Date(), 'MMM', {locale: ptBR,}),\n  hour: format(new Date(), 'HH', {locale: ptBR,}),\n  min: format(new Date(), 'mm', {locale: ptBR,}),\n  sec: format(new Date(), 'ss', {locale: ptBR,}),\n  destHour: 18,\n  destMin: 5,\n  countdownHour: 0,\n  countdownMin: 0,\n  countdownSec: 0,\n}\n\nclass TimeTravelBox extends React.Component {\n  constructor() {\n    super();\n\n    this.time = this.time.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n\n    this.state = state\n  }\n\n  time() {\n    this.setState({\n      date: new Date(),\n      day: format(new Date(), 'dd', {locale: ptBR,}),\n      month: format(new Date(), 'MMM', {locale: ptBR,}),\n      hour: format(new Date(), 'HH', {locale: ptBR,}),\n      min: format(new Date(), 'mm', {locale: ptBR,}),\n      sec: format(new Date(), 'ss', {locale: ptBR,})\n    })\n  }\n\n  countdown() {\n    const { destMin, min, destHour, hour, sec } = this.state;\n\n    let countdownSec = 60 - sec;\n    let countdownMin = destMin - min;\n    let countdownHour = destHour - hour;\n\n    if(countdownSec < 10 ) {\n      countdownSec = \"0\"+countdownSec;\n    }\n\n    if(countdownSec === 60 ) {\n      countdownSec = \"00\"\n    }\n    \n    if (countdownMin < 0) {\n      countdownMin = countdownMin + 60;\n      countdownHour = countdownHour - 1\n    }\n    \n    if(countdownMin < 10 ) {\n      countdownMin = \"0\"+countdownMin;\n    }\n\n    if(countdownHour < 10 ) {\n      countdownHour = \"0\"+countdownHour;\n    }\n    \n    this.setState({\n      countdownSec,\n      countdownMin,\n      countdownHour\n    })\n  }\n\n  updateTime() {\n    const ONE_MILISECOND = 1;\n    setInterval(() => {\n      this.time()\n      this.countdown()\n    }, ONE_MILISECOND);\n  }\n\n  componentDidMount() {\n    this.updateTime()\n  }\n  \n  render() {\n    const { day, month, hour, min, sec, countdownHour, countdownMin, countdownSec } = this.state\n\n    return (\n      <div className=\"box\">\n        <Timeframe \n          legend=\"Present Time\"\n          id=\"present-time\"\n          day={ day }\n          month={ month }\n          hour={ hour }\n          min={ min }\n          sec={ sec }\n        />\n        <Timeframe \n          legend=\"Destination Time\"\n          id=\"destination-time\"\n          day={ day }\n          month={ month }\n          hour={ hour }\n          min={ min }\n          sec={ sec }\n        />\n        <Timeframe\n          legend=\"Countdown\"\n          id=\"countdown\"\n          day={ day }\n          month={ month }\n          hour={ countdownHour }\n          min={ countdownMin }\n          sec={ countdownSec }\n        />\n      </div>\n    )\n  }\n}\n\nexport default TimeTravelBox;\n","\nimport React from 'react';\nimport './App.css';\nimport TimeTravelBox from './components/TimeTravelBox';\n\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"background\">\n        <TimeTravelBox />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}