{"version":3,"sources":["components/Button.jsx","components/InputComponent.jsx","components/TimeComponent.jsx","components/Timeframe.jsx","components/TimeTravelBox.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","className","React","Component","InputComponent","this","props","id","value","handleChange","name","min","max","type","placeholder","onChange","TimeComponent","Timeframe","day","month","hour","sec","destHour","destMin","input","legend","state","format","Date","locale","ptBR","countdownHour","countdownMin","countdownSec","TimeTravelBox","time","bind","countdown","updateTime","setState","event","target","setInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f60ba676.chunk.js","sourcesContent":["import React from 'react';\n\nclass Button extends React.Component {\n  render() {\n    // const { id, value } = this.props;\n\n    return (\n      <button className=\"start\">\n        <p>1.21</p>\n        <p>GIGAWATTS</p> \n      </button>\n    )\n  }\n}\n\nexport default Button;","import React from 'react';\n\nclass InputComponent extends React.Component {\n  render() {\n    const { id, value, handleChange, name } = this.props;\n\n    let min = 0;\n    let max = 59;\n\n    if(id === \"hour\") {\n      min = value\n      max = 23\n    }\n\n    return (\n      <div className={ id }>\n        <p>{ id }</p>\n        <input\n          type=\"number\"\n          placeholder={ value }\n          name={ name }\n          onChange={ handleChange }\n          min={ min }\n          max={ max }\n        />\n      </div>\n    )\n  }\n}\n\nexport default InputComponent;","import React from 'react';\n\nclass TimeComponent extends React.Component {\n  render() {\n    const { id, value } = this.props;\n\n    return (\n      <div className={ id }>\n        <p>{ id }</p>\n        <div>{ value }</div>\n      </div>\n    )\n  }\n}\n\nexport default TimeComponent;","import React from 'react';\nimport Button from './Button';\nimport InputComponent from './InputComponent';\nimport TimeComponent from './TimeComponent';\n\nclass Timeframe extends React.Component {\n  render() {\n    const {\n      day, month, hour, min, sec,\n      destHour, destMin, id, handleChange,\n    } = this.props\n    \n    return (\n      <div className=\"timeframe\">\n        <div className=\"date\">\n          <TimeComponent id='day' value={ day }/>\n          <TimeComponent id='month' value={ month }/>\n          { id === \"destination-time\" \n            ? <InputComponent id='hour' value={ hour } name=\"destHour\" input={ destHour } handleChange={ handleChange } /> \n            : <TimeComponent id='hour' value={ hour }/>}\n          { id === \"destination-time\" \n            ? <InputComponent id='min' value={ min } name=\"destMin\" input={ destMin } handleChange={ handleChange } /> \n            : <TimeComponent id='min' value={ min }/>}\n          { id === \"destination-time\" \n            ? <Button/> \n            : <TimeComponent id='sec' value={ sec }/>}\n        </div>\n        <div className=\"legend\">\n          <p>{ this.props.legend }</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Timeframe;\n","import React from 'react';\n\nimport format from 'date-fns/format';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport Timeframe from './Timeframe';\nimport { set } from 'date-fns';\n\nconst state = {\n  day: format(new Date(), 'dd', {locale: ptBR,}),\n  month: format(new Date(), 'MMM', {locale: ptBR,}),\n  hour: format(new Date(), 'HH', {locale: ptBR,}),\n  min: format(new Date(), 'mm', {locale: ptBR,}),\n  sec: format(new Date(), 'ss', {locale: ptBR,}),\n  destHour: \"00\",\n  destMin: \"00\",\n  countdownHour: \"00\",\n  countdownMin: \"00\",\n  countdownSec: \"00\",\n}\n\nclass TimeTravelBox extends React.Component {\n  constructor() {\n    super();\n\n    this.time = this.time.bind(this);\n    this.countdown = this.countdown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n\n    this.state = state\n  }\n\n  time() {\n    this.setState({\n      day: format(new Date(), 'dd', {locale: ptBR,}),\n      month: format(new Date(), 'MMM', {locale: ptBR,}),\n      hour: format(new Date(), 'HH', {locale: ptBR,}),\n      min: format(new Date(), 'mm', {locale: ptBR,}),\n      sec: format(new Date(), 'ss', {locale: ptBR,})\n    })\n  }\n\n  countdown() {\n    const { destMin, min, destHour, hour, sec } = this.state;\n\n    let countdownSec = 60 - sec;\n    let countdownMin = destMin - min;\n    let countdownHour = destHour - hour;\n\n    if(countdownSec < 10 ) {\n      countdownSec = \"0\"+countdownSec;\n    }\n\n    if(countdownSec === 60 ) {\n      countdownSec = \"00\"\n    }\n    \n    if (countdownMin < 0) {\n      countdownMin = countdownMin + 60;\n      countdownHour = countdownHour - 1\n    }\n    \n    if(countdownMin < 10 ) {\n      countdownMin = \"0\"+countdownMin;\n    }\n\n    if(countdownHour < 10 ) {\n      countdownHour = \"0\"+countdownHour;\n    }\n    \n    this.setState({\n      countdownSec,\n      countdownMin,\n      countdownHour\n    })\n  }\n\n  handleChange(event) {\n    const { target: { name, value } } = event\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  updateTime() {\n    const ONE_MILISECOND = 1;\n    setInterval(() => {\n      this.time()\n      this.countdown()\n    }, ONE_MILISECOND);\n  }\n\n  componentDidMount() {\n    this.updateTime()\n  }\n  \n  render() {\n    const {\n      day, month, hour, min, sec,\n      destHour, destMin,\n      countdownHour, countdownMin, countdownSec\n    } = this.state\n\n    return (\n      <div className=\"box\">\n        <Timeframe \n          legend=\"Present Time\"\n          id=\"present-time\"\n          day={ day }\n          month={ month }\n          hour={ hour }\n          min={ min }\n          sec={ sec }\n        />\n        <Timeframe \n          legend=\"Destination Time\"\n          id=\"destination-time\"\n          day={ day }\n          month={ month }\n          hour={ hour }\n          min={ min }\n          destHour={ destHour }\n          destMin={ destMin }\n          handleChange={ this.handleChange }\n        />\n        <Timeframe\n          legend=\"Countdown\"\n          id=\"countdown\"\n          day={ day }\n          month={ month }\n          hour={ countdownHour }\n          min={ countdownMin }\n          sec={ countdownSec }\n        />\n      </div>\n    )\n  }\n}\n\nexport default TimeTravelBox;\n","\nimport React from 'react';\nimport './App.css';\nimport TimeTravelBox from './components/TimeTravelBox';\n\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"background\">\n        <TimeTravelBox />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}