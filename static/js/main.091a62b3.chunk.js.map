{"version":3,"sources":["components/PresentTime.jsx","components/TimeTravelBox.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["state","format","Date","locale","ptBR","day","month","hour","minute","second","PresentTime","props","this","cronometerInterval","setInterval","console","log","setState","className","legend","React","Component","TimeTravelBox","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAoBMA,GAhBMC,YAAO,IAAIC,KAAQ,KAAM,CACnCC,OAAQC,MAEIH,YAAO,IAAIC,KAAQ,MAAO,CACtCC,OAAQC,MAEGH,YAAO,IAAIC,KAAQ,KAAM,CACpCC,OAAQC,MAEKH,YAAO,IAAIC,KAAQ,KAAM,CACtCC,OAAQC,MAEKH,YAAO,IAAIC,KAAQ,KAAM,CACtCC,OAAQC,MAGI,CACZC,IAAKJ,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,MACvCE,MAAOL,YAAO,IAAIC,KAAQ,MAAO,CAACC,OAAQC,MAC1CG,KAAMN,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,MACxCI,OAAQP,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,MAC1CK,OAAQR,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,QA2D7BM,E,kDAvDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDX,MAAQA,EAHI,E,qDAMnB,WAAqB,IAAD,OAElBY,KAAKC,mBAAqBC,aAAY,WACpCC,QAAQC,IAAI,oBACZ,EAAMC,SAAS,CACbZ,IAAKJ,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,MACvCE,MAAOL,YAAO,IAAIC,KAAQ,MAAO,CAACC,OAAQC,MAC1CG,KAAMN,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,MACxCI,OAAQP,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,MAC1CK,OAAQR,YAAO,IAAIC,KAAQ,KAAM,CAACC,OAAQC,UAR3B,O,oBAarB,WACE,MAA6CQ,KAAKZ,MAA1CK,EAAR,EAAQA,IAAKC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,OAElC,OACE,sBAAKS,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,oCACA,8BAAOb,OAET,sBAAKa,UAAU,QAAf,UACE,sCACA,8BAAOZ,OAET,sBAAKY,UAAU,OAAf,UACE,qCACA,8BAAOX,OAET,sBAAKW,UAAU,MAAf,UACE,oCACA,8BAAOV,OAET,sBAAKU,UAAU,MAAf,UACE,oCACA,8BAAOT,UAGX,qBAAKS,UAAU,SAAf,SACE,4BAAKN,KAAKD,MAAMQ,kB,GAjDAC,IAAMC,WCbjBC,E,4JAXb,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,CAAaC,OAAO,uB,GAJAC,IAAMC,WCcnBE,E,4JAVb,WAEE,OACE,qBAAKL,UAAU,aAAf,SACE,cAAC,EAAD,U,GALUE,IAAMC,WCMTG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.091a62b3.chunk.js","sourcesContent":["import React from 'react';\nimport format from 'date-fns/format';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nconst DAY = format(new Date(), 'dd', {\n  locale: ptBR,\n});\nconst MONTH = format(new Date(), 'MMM', {\n  locale: ptBR,\n});\nconst HOUR = format(new Date(), 'HH', {\n  locale: ptBR,\n});\nconst MINUTE = format(new Date(), 'mm', {\n  locale: ptBR,\n});\nconst SECOND = format(new Date(), 'ss', {\n  locale: ptBR,\n});\n\nconst state = {\n  day: format(new Date(), 'dd', {locale: ptBR,}),\n  month: format(new Date(), 'MMM', {locale: ptBR,}),\n  hour: format(new Date(), 'HH', {locale: ptBR,}),\n  minute: format(new Date(), 'mm', {locale: ptBR,}),\n  second: format(new Date(), 'ss', {locale: ptBR,})\n}\n\nclass PresentTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = state\n  }\n\n  componentDidMount() {\n    const ONE_SECOND = 1000; // 1 second in miliseconds\n    this.cronometerInterval = setInterval(() => {\n      console.log('interval rodando');(\n      this).setState({\n        day: format(new Date(), 'dd', {locale: ptBR,}),\n        month: format(new Date(), 'MMM', {locale: ptBR,}),\n        hour: format(new Date(), 'HH', {locale: ptBR,}),\n        minute: format(new Date(), 'mm', {locale: ptBR,}),\n        second: format(new Date(), 'ss', {locale: ptBR,})\n      });\n    }, ONE_SECOND);\n  }\n  \n  render() {\n    const { day, month, hour, minute, second } = this.state\n    \n    return (\n      <div className=\"timeframe\">\n        <div className=\"date\">\n          <div className=\"day\">\n            <p>day</p>\n            <div>{ day }</div>\n          </div>\n          <div className=\"month\">\n            <p>month</p>\n            <div>{ month }</div>\n          </div>\n          <div className=\"hour\">\n            <p>hour</p>\n            <div>{ hour }</div>\n          </div>\n          <div className=\"min\">\n            <p>min</p>\n            <div>{ minute }</div>\n          </div>\n          <div className=\"sec\">\n            <p>sec</p>\n            <div>{ second }</div>\n          </div>\n        </div>\n        <div className=\"legend\">\n          <p>{ this.props.legend }</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PresentTime;\n","import React from 'react';\nimport PresentTime from './PresentTime';\n\nclass TimeTravelBox extends React.Component {\n  render() {\n    return (\n      <div className=\"box\">\n        <PresentTime legend=\"Present Time\"/>\n        {/* <TimeFrame legend=\"Destination Time\"/>\n        <TimeFrame legend=\"Waiting Time\"/> */}\n      </div>\n    )\n  }\n}\n\nexport default TimeTravelBox;\n","\nimport React from 'react';\nimport './App.css';\nimport TimeTravelBox from './components/TimeTravelBox';\n\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"background\">\n        <TimeTravelBox />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}